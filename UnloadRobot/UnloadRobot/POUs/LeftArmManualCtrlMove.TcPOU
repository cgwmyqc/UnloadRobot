<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.14">
  <POU Name="LeftArmManualCtrlMove" Id="{7ce4e0af-3646-41d7-be69-9b2292beb16d}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM LeftArmManualCtrlMove
VAR
	
	point												:Points;					// 当前腕关节坐标
	target_angle										:Angles;					// 臂左右电机目标角度
	manualState											:USINT;						// 手动控制状态标志位，0
	speed												:REAL := 0.5;					// 笛卡尔坐标位移速度
	x													:REAL;						// 腕关节目标位置x
	y													:REAL;						// 腕关节目标位置y
	wrist_angle											:REAL;						// 腕电机角度
	
	//左臂举升电机
	LeftArm_Lift_Jog									:MC_Jog;
	bLeftArm_Lift_Up									:BOOL;
	bLeftArm_Lift_Down									:BOOL;
	nLeftArmLiftSpeed									:LREAL:=3;					//举升电机速度
	
	LeftArm_Right_ExtPosGen_Enable						:MC_ExtSetPointGenEnable;
	LeftArm_Right_ExtPosGen_Disable                     :MC_ExtSetPointGenDisable;
	LeftArm_Left_ExtPosGen_Enable                       :MC_ExtSetPointGenEnable;
	LeftArm_Left_ExtPosGen_Disable	                    :MC_ExtSetPointGenDisable;
	LeftArm_Wrist_ExtPosGen_Enable                      :MC_ExtSetPointGenEnable;
	LeftArm_Wrist_ExtPosGen_Disable	                    :MC_ExtSetPointGenDisable;
	
	//串口
	//fb_SerialCom		:FB_SerialCom;					
	//wrist_angle_int		:INT;
	//wrist_angle_byte	:BYTE;
	
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[axis_LeftArm_Left();
axis_LeftArm_Right();
axis_LeftArm_Wrist();
ExtPosGen();


// 外部位置发生器失能
LeftArm_Right_ExtPosGen_Enable.Execute 		:= FALSE;
LeftArm_Right_ExtPosGen_Disable.Execute 	:= FALSE;
LeftArm_Left_ExtPosGen_Enable.Execute 		:= FALSE;
LeftArm_Left_ExtPosGen_Disable.Execute 		:= FALSE;
LeftArm_Wrist_ExtPosGen_Enable.Execute 		:= FALSE;
LeftArm_Wrist_ExtPosGen_Disable.Execute 	:= FALSE;

IF bManualCtrl_Asm_LeftArm THEN
	// 举升电机McJog
	LeftArmLiftJog();
	
	// 运动学正解出当前腕关节点坐标
	point := LeftArmFK(axis_LeftArm_Right.NcToPlc.ActPos, axis_LeftArm_Left.NcToPlc.ActPos);
	
	// 用舵机进行程序验证的串口背景通讯
	//BackgroundSerialCtrl();
	
	IF bAutoCtrl_Part_LeftWrist THEN
		
		wrist_angle := WristIK(point.x, point.y);		// 逆解出腕电机角度
		

		// 用舵机进行程序验证的串口测试
		//wrist_angle_int:= TO_INT(wrist_angle);
		//wrist_angle_byte:= INT_TO_BYTE(wrist_angle_int);
		//fb_SerialCom(TxBuffer:= TxBuffer, RxBuffer:= RxBuffer, angle:= wrist_angle_byte);	
		

	END_IF
	

	IF bLeftArm_Forward THEN
		x := point.x;
		y := point.y + speed;
		target_angle := LeftArmIK(x, y);
		manualState := 1;
		
	ELSIF bLeftArm_Backward THEN
	
		x := point.x;
		y := point.y - speed;
		target_angle := LeftArmIK(x, y);
		manualState := 1;
		
	ELSIF bLeftArm_Left THEN
		
		x := point.x - speed;
		y := point.y;
		target_angle := LeftArmIK(x, y);
		manualState := 1;
		
	ELSIF bLeftArm_Right THEN
		
		x := point.x + speed;
		y := point.y;
		target_angle := LeftArmIK(x, y);
		manualState := 1;
		
	ELSE
		manualState := 0;
	END_IF
	
	
	
	CASE manualState OF
		0:
			LeftArm_Right_ExtPosGen_Enable.Execute 		:= FALSE;
			LeftArm_Right_ExtPosGen_Disable.Execute 	:= TRUE;
			LeftArm_Left_ExtPosGen_Enable.Execute 		:= FALSE;
			LeftArm_Left_ExtPosGen_Disable.Execute 		:= TRUE;
			LeftArm_Wrist_ExtPosGen_Enable.Execute 		:= FALSE;
			LeftArm_Wrist_ExtPosGen_Disable.Execute 	:= TRUE;
		
		1:
			LeftArm_Right_ExtPosGen_Enable.Execute := TRUE;
			LeftArm_Left_ExtPosGen_Enable.Execute := TRUE;
			LeftArm_Wrist_ExtPosGen_Enable.Execute := TRUE;
			IF axis_LeftArm_Right.Status.ExtSetPointGenEnabled AND axis_LeftArm_Left.Status.ExtSetPointGenEnabled AND axis_LeftArm_Wrist.Status.ExtSetPointGenEnabled THEN
				MC_ExtSetPointGenFeed(
					Position:= target_angle.theta1_right, 
					Velocity:= 1,  
					Acceleration:= 3,  
					Direction:= 1, 
					Axis:= axis_LeftArm_Right);
		
				MC_ExtSetPointGenFeed(
					Position:= target_angle.theta2_left, 
					Velocity:= 1,  
					Acceleration:= 3,  
					Direction:= 1, 
					Axis:= axis_LeftArm_Left);
					
				MC_ExtSetPointGenFeed(
					Position:= wrist_angle, 
					Velocity:= 1, 
					Acceleration:= 3, 
					Direction:= 1, 
					Axis:= axis_LeftArm_Wrist);
			END_IF
	END_CASE

//ELSE

END_IF




]]></ST>
    </Implementation>
    <Action Name="ExtPosGen" Id="{e3c908b9-5d30-4d3c-9346-9279cf2bd814}">
      <Implementation>
        <ST><![CDATA[LeftArm_Right_ExtPosGen_Enable(
	Axis:= axis_LeftArm_Right, 
	Execute:= LeftArm_Right_ExtPosGen_Enable.Execute, 
	Position:= , 
	PositionType:= , 
	Done=> , 
	Busy=> , 
	Error=> , 
	ErrorID=> , 
	Enabled=> );
	
LeftArm_Right_ExtPosGen_Disable(
	Axis:= axis_LeftArm_Right, 
	Execute:= LeftArm_Right_ExtPosGen_Disable.Execute, 
	Done=> , 
	Busy=> , 
	Error=> , 
	ErrorID=> , 
	Enabled=> );
	
LeftArm_Left_ExtPosGen_Enable(
	Axis:= axis_LeftArm_Left, 
	Execute:= LeftArm_Left_ExtPosGen_Enable.Execute, 
	Position:= , 
	PositionType:= , 
	Done=> , 
	Busy=> , 
	Error=> , 
	ErrorID=> , 
	Enabled=> );
	
LeftArm_Left_ExtPosGen_Disable(
	Axis:= axis_LeftArm_Left, 
	Execute:= LeftArm_Left_ExtPosGen_Disable.Execute, 
	Done=> , 
	Busy=> , 
	Error=> , 
	ErrorID=> , 
	Enabled=> );
	
LeftArm_Wrist_ExtPosGen_Enable(
	Axis:= axis_LeftArm_Wrist, 
	Execute:= LeftArm_Wrist_ExtPosGen_Enable.Execute, 
	Position:= , 
	PositionType:= , 
	Done=> , 
	Busy=> , 
	Error=> , 
	ErrorID=> , 
	Enabled=> );
	
LeftArm_Wrist_ExtPosGen_Disable(
	Axis:= axis_LeftArm_Wrist, 
	Execute:= LeftArm_Wrist_ExtPosGen_Disable.Execute, 
	Done=> , 
	Busy=> , 
	Error=> , 
	ErrorID=> , 
	Enabled=> );]]></ST>
      </Implementation>
    </Action>
    <Action Name="LeftArmLiftJog" Id="{fa2827fa-9b6c-474c-aa67-a14473c70902}">
      <Implementation>
        <ST><![CDATA[LeftArm_Lift_Jog(
	Axis:= axis_LeftArm_Lift, 
	JogForward:= bLeftArm_Lift_Up, 
	JogBackwards:= bLeftArm_Lift_Down, 
	Mode:= MC_JOGMODE_CONTINOUS, 
	Position:= , 
	Velocity:= nLeftArmLiftSpeed, 
	Acceleration:= , 
	Deceleration:= , 
	Jerk:= , 
	Done=> , 
	Busy=> , 
	Active=> , 
	CommandAborted=> , 
	Error=> , 
	ErrorID=> );]]></ST>
      </Implementation>
    </Action>
    <LineIds Name="LeftArmManualCtrlMove">
      <LineId Id="135" Count="1" />
      <LineId Id="348" Count="0" />
      <LineId Id="134" Count="0" />
      <LineId Id="345" Count="0" />
      <LineId Id="189" Count="0" />
      <LineId Id="139" Count="0" />
      <LineId Id="167" Count="2" />
      <LineId Id="138" Count="0" />
      <LineId Id="301" Count="0" />
      <LineId Id="300" Count="0" />
      <LineId Id="137" Count="0" />
      <LineId Id="8" Count="0" />
      <LineId Id="346" Count="1" />
      <LineId Id="114" Count="0" />
      <LineId Id="188" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="241" Count="2" />
      <LineId Id="190" Count="0" />
      <LineId Id="192" Count="0" />
      <LineId Id="216" Count="0" />
      <LineId Id="193" Count="0" />
      <LineId Id="237" Count="0" />
      <LineId Id="302" Count="0" />
      <LineId Id="273" Count="0" />
      <LineId Id="303" Count="0" />
      <LineId Id="247" Count="0" />
      <LineId Id="217" Count="0" />
      <LineId Id="271" Count="0" />
      <LineId Id="215" Count="0" />
      <LineId Id="194" Count="0" />
      <LineId Id="191" Count="0" />
      <LineId Id="11" Count="1" />
      <LineId Id="14" Count="33" />
      <LineId Id="52" Count="3" />
      <LineId Id="304" Count="1" />
      <LineId Id="56" Count="3" />
      <LineId Id="306" Count="0" />
      <LineId Id="60" Count="13" />
      <LineId Id="307" Count="0" />
      <LineId Id="309" Count="4" />
      <LineId Id="308" Count="0" />
      <LineId Id="74" Count="2" />
      <LineId Id="79" Count="0" />
      <LineId Id="162" Count="1" />
      <LineId Id="161" Count="0" />
      <LineId Id="160" Count="0" />
      <LineId Id="159" Count="0" />
      <LineId Id="158" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="LeftArmManualCtrlMove.ExtPosGen">
      <LineId Id="2" Count="37" />
      <LineId Id="1" Count="0" />
      <LineId Id="40" Count="0" />
      <LineId Id="42" Count="8" />
      <LineId Id="41" Count="0" />
      <LineId Id="51" Count="0" />
      <LineId Id="53" Count="6" />
      <LineId Id="52" Count="0" />
    </LineIds>
    <LineIds Name="LeftArmManualCtrlMove.LeftArmLiftJog">
      <LineId Id="2" Count="14" />
      <LineId Id="1" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>