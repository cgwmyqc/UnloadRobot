<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.14">
  <POU Name="LeftArmIK" Id="{2518ff54-4784-4cc2-b675-9797cc353076}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION LeftArmIK : Angles
VAR_INPUT
	x:LREAL;
	y:LREAL;
END_VAR
VAR
	
	// 中间量
	p:LREAL;
	q:LREAL;
	l:LREAL;
	k:LREAL;
	angle_CAF:LREAL;	
	angle_OAF:LREAL;
	theta1:LREAL;
	theta2:LREAL;
	angle_ACF:LREAL;
	angle_ACE:LREAL;
	angle_CAE:LREAL;
	angle_EAB:LREAL;
	angle_EBA:LREAL;
	angle_DBE:LREAL;
	
	// 输出
	angles		:Angles;
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// TWINCAT 角度换算以弧度为单位

p := SQRT((x-LeftArm_w)*(x-LeftArm_w)+y*y);
q := SQRT(x*x + y*y);
 
//n := SQRT(i*i+j*j-2*i*j*COS(DEG_TO_RAD(angle_a)));
angle_CAF := ACOS((LeftArm_f*LeftArm_f+p*p-LeftArm_n*LeftArm_n)/(2*LeftArm_f*p));
angle_OAF := ACOS((LeftArm_w*LeftArm_w+p*p-q*q)/(2*LeftArm_w*p));
theta1 := PI-angle_CAF-angle_OAF;

angle_ACF := ACOS((LeftArm_f*LeftArm_f+LeftArm_n*LeftArm_n-p*p)/(2*LeftArm_f*LeftArm_n));
//angle_FCE := ACOS((n*n+i*i-j*j)/(2*n*i));
angle_ACE := angle_ACF - DEG_TO_RAD(LeftArm_angle_FCE);
l := SQRT(LeftArm_i*LeftArm_i+LeftArm_f*LeftArm_f-2*LeftArm_i*LeftArm_f*COS(angle_ACE));
angle_CAE := ACOS((LeftArm_f*LeftArm_f+l*l-LeftArm_i*LeftArm_i)/(2*LeftArm_f*l));
angle_EAB := PI-theta1 - angle_CAE;
k := SQRT(l*l + 4*LeftArm_w*LeftArm_w - 4*l*LeftArm_w*COS(angle_EAB));
angle_EBA := ACOS((k*k+4*LeftArm_w*LeftArm_w-l*l)/(4*k*LeftArm_w));
angle_DBE := ACOS((LeftArm_g*LeftArm_g+k*k-LeftArm_h*LeftArm_h)/(2*LeftArm_g*k));
theta2 := angle_EBA + angle_DBE;

angles.theta1_right := RAD_TO_DEG(theta1);
angles.theta2_left := RAD_TO_DEG(theta2);


LeftArmIK := angles;]]></ST>
    </Implementation>
    <LineIds Name="LeftArmIK">
      <LineId Id="200" Count="24" />
      <LineId Id="7" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>