<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.14">
  <GVL Name="Robot_Control_State" Id="{9db10112-7154-4071-a9e0-8bf963450b4d}">
    <Declaration><![CDATA[//{attribute 'qualified_only'}
VAR_GLOBAL
	
	(*电机操作逆时针为正*)
	
(*======================================== 自定义标志位 Start ======================================*)	
	bManualCtrl_Asm_LeftArm										:BOOL;			// 手动控制标志位-总成-左臂
	bManualCtrl_Asm_RightArm									:BOOL;			// 手动控制标志位-总成-右臂

	bAutoCtrl_Part_LeftWrist									:BOOL;			// 自动控制-单体-腕电机
	bAutoCtrl_Part_RightWrist									:BOOL;			// 自动控制-单体-腕电机	


	// 单轴控制标志位
	bManualCtrl_Part_LeftArm_Left								:BOOL;			
	bManualCtrl_Part_LeftArm_Right								:BOOL;			
	bManualCtrl_Part_LeftArm_Wrist								:BOOL;	
	bManualCtrl_Part_LeftArm_Lift								:BOOL;
	bManualCtrl_Part_RightArm_Left								:BOOL;
	bManualCtrl_Part_RightArm_Right								:BOOL;			
	bManualCtrl_Part_RightArm_Wrist								:BOOL;	
	bManualCtrl_Part_RightArm_Lift								:BOOL;
	bManualCtrl_Part_BigGate_Left								:BOOL;
	bManualCtrl_Part_BigGate_Right								:BOOL;	
	bManualCtrl_Part_SmallGate_Left								:BOOL;
	bManualCtrl_Part_SmallGate_Right							:BOOL;		
	bManualCtrl_Part_BackGate_Left								:BOOL;
	bManualCtrl_Part_BackGate_Right								:BOOL;

	// 合成同步运动标志位		
	bManualCtrl_Asm_BigGate										:BOOL;
	bManualCtrl_Asm_SmallGate									:BOOL;
	bManualCtrl_Asm_BackGate									:BOOL;
	
	
	// 急停激活时大龙门、小龙门、后龙门电子齿轮重新啮合标志位
	// 当Slave轴触发Mc_Stop，会自动取消啮合，需要再次GearIn一下，所以此处设了一个全局变量，恢复急停后统一把三个龙门电子齿轮重新啮合一下。
	bEStopGearInAgain											:BOOL:=TRUE;
	bSmallGate_Gearin_do										:BOOL:=TRUE;
	bBigGate_Gearin_do											:BOOL:=TRUE;
	bBackGate_Gearin_do											:BOOL:=TRUE;

(*======================================== 自定义标志位 End ========================================*)	



(*=================================================    走位置演示    =======================================*)

	bAutoMovePosSet												:BOOL;			// 走位置演示
	
	
(*=================================================    走位置演示    =======================================*)



	

(*========================================电机使能标志位 Start =====================================*)	
	
	// 左臂电机
	bAxis_LeftArm_Wrist_Enable									:BOOL;				//左臂_腕电机使能	
	bAxis_LeftArm_Left_Enable									:BOOL;				//左臂_左电机使能
	bAxis_LeftArm_Right_Enable									:BOOL;				//左臂_右电机使能	
	bAxis_LeftArm_Lift_Enable									:BOOL;				//左臂_升电机使能	

	// 右臂电机
	bAxis_RightArm_Wrist_Enable									:BOOL;				//右臂_腕电机使能	
	bAxis_RightArm_Left_Enable									:BOOL;				//右臂_左电机使能
	bAxis_RightArm_Right_Enable									:BOOL;				//右臂_右电机使能
	bAxis_RightArm_Lift_Enable									:BOOL;				//右臂_升电机使能
	                                                                            	
	// 小龙门电机                                                                    	
	bAxis_SmallGate_Left_Enable									:BOOL;				//小门_左电机使能
	bAxis_SmallGate_Right_Enable								:BOOL;				//小门_右电机使能
                                                                                	
	// 大龙门单电机                                                                   	
	bAxis_BigGate_Left_Enable									:BOOL;				//大门_左电机使能
	bAxis_BigGate_Right_Enable									:BOOL;				//大门_右电机使能
	                                                                            	
	// 后龙门单电机                                                                   	
	bAxis_BackGate_Left_Enable									:BOOL;				//后门_左电机使能
	bAxis_BackGate_Right_Enable									:BOOL;				//后门_右电机使能
	
	// 右轮
	bAxis_RightWheel_Steer_Enable								:BOOL;
	bAxis_RightWheel_Walk_Enable								:BOOL;
	
	// 左轮
	bAxis_LeftWheel_Steer_Enable								:BOOL;
	bAxis_LeftWheel_Walk_Enable									:BOOL;
	
	
	// 所有轴
	bAxis_All_Enable											:BOOL;				//所有电机使能
	bAxis_All_Disable											:BOOL;				//所有电机失能
	
	
	// 所有轴使能标志位的地址交给此Group来管理
	aAxis_All_Enable_Group 										:ARRAY[1..23] OF POINTER TO BOOL:=[
																									ADR(bAxis_LeftArm_Wrist_Enable),	
																									ADR(bAxis_LeftArm_Left_Enable),	
																									ADR(bAxis_LeftArm_Right_Enable),
																									ADR(bAxis_LeftArm_Lift_Enable),
																									ADR(bAxis_RightArm_Wrist_Enable),	
																									ADR(bAxis_RightArm_Left_Enable),	
																									ADR(bAxis_RightArm_Right_Enable),	
																									ADR(bAxis_RightArm_Lift_Enable),
																									ADR(bAxis_SmallGate_Left_Enable),
																									ADR(bAxis_SmallGate_Right_Enable),
																									ADR(bAxis_BigGate_Left_Enable),	
																									ADR(bAxis_BigGate_Right_Enable),
																									ADR(bAxis_BackGate_Left_Enable),	
																									ADR(bAxis_BackGate_Right_Enable),
																									ADR(bAxis_RightWheel_Steer_Enable),	
																									ADR(bAxis_RightWheel_Walk_Enable),	
																									ADR(bAxis_LeftWheel_Steer_Enable),
																									ADR(bAxis_LeftWheel_Walk_Enable)	
																									
																				 				 ];

(*========================================电机使能标志位 End ======================================*)	




(*======================================== 清故障标志位 Start =====================================*)	

	// 左臂电机
	bAxis_LeftArm_Wrist_Reset									:BOOL;				//左臂_腕电机复位	
	bAxis_LeftArm_Left_Reset									:BOOL;				//左臂_左电机复位
	bAxis_LeftArm_Right_Reset									:BOOL;				//左臂_右电机复位	
	bAxis_LeftArm_Lift_Reset									:BOOL;				//左臂_升电机复位	

	// 右臂电机
	bAxis_RightArm_Wrist_Reset									:BOOL;				//右臂_腕电机复位	
	bAxis_RightArm_Left_Reset									:BOOL;				//右臂_左电机复位
	bAxis_RightArm_Right_Reset									:BOOL;				//右臂_右电机复位
	bAxis_RightArm_Lift_Reset									:BOOL;				//右臂_升电机复位
	                                                                            	
	// 小龙门电机                                                                    	
	bAxis_SmallGate_Left_Reset									:BOOL;				//小门_左电机复位
	bAxis_SmallGate_Right_Reset									:BOOL;				//小门_右电机复位
                                                                                	
	// 大龙门单电机                                                                   	
	bAxis_BigGate_Left_Reset									:BOOL;				//大门_左电机复位
	bAxis_BigGate_Right_Reset									:BOOL;				//大门_右电机复位
	                                                                            	
	// 后龙门单电机                                                                   	
	bAxis_BackGate_Left_Reset									:BOOL;				//后门_左电机复位
	bAxis_BackGate_Right_Reset									:BOOL;				//后门_右电机复位
	
	// 右轮
	bAxis_RightWheel_Steer_Reset								:BOOL;
	bAxis_RightWheel_Walk_Reset								:BOOL;
	
	// 左轮
	bAxis_LeftWheel_Steer_Reset								:BOOL;
	bAxis_LeftWheel_Walk_Reset									:BOOL;
	
	
	
	
	
	
	
	// 所有轴
	bAxis_All_Reset												:BOOL;				//所有电机使能

	// 所有轴使能标志位的地址交给此Group来管理
	aAxis_All_Reset_Group 										:ARRAY[1..23] OF POINTER TO BOOL:=[
																									ADR(bAxis_LeftArm_Wrist_Reset),	
																									ADR(bAxis_LeftArm_Left_Reset),	
																									ADR(bAxis_LeftArm_Right_Reset),
																									ADR(bAxis_LeftArm_Lift_Reset),
																									ADR(bAxis_RightArm_Wrist_Reset),	
																									ADR(bAxis_RightArm_Left_Reset),	
																									ADR(bAxis_RightArm_Right_Reset),	
																									ADR(bAxis_RightArm_Lift_Reset),
																									ADR(bAxis_SmallGate_Left_Reset),
																									ADR(bAxis_SmallGate_Right_Reset),
																									ADR(bAxis_BigGate_Left_Reset),	
																									ADR(bAxis_BigGate_Right_Reset),
																									ADR(bAxis_BackGate_Left_Reset),	
																									ADR(bAxis_BackGate_Right_Reset),
																									ADR(bAxis_RightWheel_Steer_Reset),	
																									ADR(bAxis_RightWheel_Walk_Reset),	
																									ADR(bAxis_LeftWheel_Steer_Reset),
																									ADR(bAxis_LeftWheel_Walk_Reset)	
																									
																				 				 ];


(*======================================== 清故障标志位 End ========================================*)	



(*======================================== 单电机调试MoveAbs标志位 End ========================================*)	
	
	// 左臂电机
	bAxis_LeftArm_Wrist_MoveAbs									:BOOL;				//左臂_腕电机MoveAbs标志位	
	bAxis_LeftArm_Left_MoveAbs									:BOOL;				//左臂_左电机MoveAbs标志位
	bAxis_LeftArm_Right_MoveAbs									:BOOL;				//左臂_右电机MoveAbs标志位	
	bAxis_LeftArm_Lift_MoveAbs									:BOOL;				//左臂_升电机MoveAbs标志位	
                                                                                           
	// 右臂电机                                                                                
	bAxis_RightArm_Wrist_MoveAbs								:BOOL;				//右臂_腕电机MoveAbs标志位	
	bAxis_RightArm_Left_MoveAbs									:BOOL;				//右臂_左电机MoveAbs标志位
	bAxis_RightArm_Right_MoveAbs								:BOOL;				//右臂_右电机MoveAbs标志位
	bAxis_RightArm_Lift_MoveAbs									:BOOL;				//右臂_升电机MoveAbs标志位
	                                                                            	       
	// 小龙门电机                                                                    	       
	bAxis_SmallGate_Left_MoveAbs								:BOOL;				//小门_左电机MoveAbs标志位
	bAxis_SmallGate_Right_MoveAbs								:BOOL;				//小门_右电机MoveAbs标志位
                                                                                	        
	// 大龙门单电机                                                                   	        
	bAxis_BigGate_Left_MoveAbs									:BOOL;				//大门_左电机MoveAbs标志位
	bAxis_BigGate_Right_MoveAbs									:BOOL;				//大门_右电机MoveAbs标志位
	                                                                            	       
	// 后龙门单电机                                                                   	       
	bAxis_BackGate_Left_MoveAbs									:BOOL;				//后门_左电机MoveAbs标志位
	bAxis_BackGate_Right_MoveAbs								:BOOL;				//后门_右电机MoveAbs标志位


(*======================================== 单电机调试MoveAbs标志位  End ========================================*)	





(*======================================== 机器人各轴 MC_Stop标志位 Start ==================================*)
	
	// 左臂电机
	bAxis_LeftArm_Wrist_McStop									:BOOL;			//左臂_腕电机MC_Stop标志位	
	bAxis_LeftArm_Left_McStop									:Bool;			//左臂_左电机MC_Stop标志位
	bAxis_LeftArm_Right_McStop									:Bool;			//左臂_右电机MC_Stop标志位
	bAxis_LeftArm_Lift_McStop									:Bool;			//左臂_升电机MC_Stop标志位
	                                                                                        
	// 右臂电机                                                                                 
	bAxis_RightArm_Wrist_McStop									:Bool;			//右臂_腕电机MC_Stop标志位	
	bAxis_RightArm_Left_McStop									:Bool;			//右臂_左电机MC_Stop标志位
	bAxis_RightArm_Right_McStop									:Bool;			//右臂_右电机MC_Stop标志位
	bAxis_RightArm_Lift_McStop									:Bool;			//右臂_升电机MC_Stop标志位
	                                                                                        
	// 小龙门电机                                                                                
	bAxis_SmallGate_Left_McStop									:Bool;			//小门_左电机MC_Stop标志位
	bAxis_SmallGate_Right_McStop								:Bool;			//小门_右电机MC_Stop标志位
	                                                                                        
	// 大龙门单电机                                                                               
	bAxis_BigGate_Left_McStop									:Bool;			//大门_左电机MC_Stop标志位
	bAxis_BigGate_Right_McStop									:Bool;			//大门_右电机MC_Stop标志位
	                                                                                        
	// 后龙门单电机                                                                               
	bAxis_BackGate_Left_McStop									:Bool;			//后门_左电机MC_Stop标志位
	bAxis_BackGate_Right_McStop									:BOOL;			//后门_右电机MC_Stop标志位
	
	// 右轮
	bAxis_RightWheel_Steer_McStop								:BOOL;
	bAxis_RightWheel_Walk_McStop								:BOOL;
	
	// 左轮
	bAxis_LeftWheel_Steer_McStop								:BOOL;
	bAxis_LeftWheel_Walk_McStop									:BOOL;
	
		// 所有轴
	bAxis_All_Stop												:BOOL;			//所有电机使能

	// 所有轴停止标志位的地址交给此Group来管理
	aAxis_All_Stop_Group 										:ARRAY[1..23] OF POINTER TO BOOL:=[
																									ADR(bAxis_LeftArm_Wrist_McStop),	
																									ADR(bAxis_LeftArm_Left_McStop),	
																									ADR(bAxis_LeftArm_Right_McStop),
																									ADR(bAxis_LeftArm_Lift_McStop),
																									ADR(bAxis_RightArm_Wrist_McStop),	
																									ADR(bAxis_RightArm_Left_McStop),	
																									ADR(bAxis_RightArm_Right_McStop),	
																									ADR(bAxis_RightArm_Lift_McStop),
																									ADR(bAxis_SmallGate_Left_McStop),
																									ADR(bAxis_SmallGate_Right_McStop),
																									ADR(bAxis_BigGate_Left_McStop),	
																									ADR(bAxis_BigGate_Right_McStop),
																									ADR(bAxis_BackGate_Left_McStop),	
																									ADR(bAxis_BackGate_Right_McStop),
																									ADR(bAxis_RightWheel_Steer_McStop),
																									ADR(bAxis_RightWheel_Walk_McStop),
																									ADR(bAxis_LeftWheel_Steer_McStop),
																									ADR(bAxis_LeftWheel_Walk_McStop)	
																				 				 ];


(*======================================== 机器人各轴 Mc_Stop标志位 End =====================================*)





	
(*======================================== 单电机控制标志位 Start ==================================*)								
	
	// 左臂单电机控制
	bAxis_LeftArm_Wrist_JogP			AT%MX0.0				:BOOL;			//左臂_腕电机_JOG正	
	bAxis_LeftArm_Wrist_JogN			AT%MX0.1				:BOOL;			//左臂_腕电机_JOG负
	bAxis_LeftArm_Left_JogP				AT%MX0.2				:BOOL;			//左臂_左电机_JOG正	
	bAxis_LeftArm_Left_JogN				AT%MX0.3				:BOOL;			//左臂_左电机_JOG负	
	bAxis_LeftArm_Right_JogP			AT%MX0.4				:BOOL;			//左臂_右电机_JOG正	
	bAxis_LeftArm_Right_JogN			AT%MX0.5				:BOOL;			//左臂_右电机_JOG负	
	bAxis_LeftArm_Lift_JogP				AT%MX0.6				:BOOL;			//左臂_升电机_JOG正	
	bAxis_LeftArm_Lift_JogN				AT%MX0.7				:BOOL;			//左臂_升电机_JOG负	

	// 右臂单电机控制
	bAxis_RightArm_Wrist_JogP			AT%MX1.6				:BOOL;			//右臂_腕电机_JOG正	
	bAxis_RightArm_Wrist_JogN			AT%MX1.7				:BOOL;			//右臂_腕电机_JOG负
	bAxis_RightArm_Left_JogP			AT%MX2.0				:BOOL;			//右臂_左电机_JOG正	
	bAxis_RightArm_Left_JogN			AT%MX2.1				:BOOL;			//右臂_左电机_JOG负	
	bAxis_RightArm_Right_JogP			AT%MX2.2				:BOOL;			//右臂_右电机_JOG正	
	bAxis_RightArm_Right_JogN			AT%MX2.3				:BOOL;			//右臂_右电机_JOG负	
	bAxis_RightArm_Lift_JogP			AT%MX2.4				:BOOL;			//右臂_升电机_JOG正	
	bAxis_RightArm_Lift_JogN			AT%MX2.5				:BOOL;			//右臂_升电机_JOG负			
	
	// 小龙门单电机控制
	bAxis_SmallGate_Left_JogP			AT%MX1.0				:BOOL;			//小门_左电机_JOG正
	bAxis_SmallGate_Left_JogN			AT%MX1.1				:BOOL;			//小门_左电机_JOG负
	bAxis_SmallGate_Right_JogP			AT%MX2.6				:BOOL;			//小门_右电机_JOG正
	bAxis_SmallGate_Right_JogN			AT%MX2.7				:BOOL;			//小门_右电机_JOG负	
	
	// 大龙门单电机控制
	bAxis_BigGate_Left_JogP				AT%MX1.2				:BOOL;			//大门_左电机_JOG正
	bAxis_BigGate_Left_JogN				AT%MX1.3				:BOOL;			//大门_左电机_JOG负
	bAxis_BigGate_Right_JogP			AT%MX3.0				:BOOL;			//大门_右电机_JOG正
	bAxis_BigGate_Right_JogN			AT%MX3.1				:BOOL;			//大门_右电机_JOG负	
	
	// 后龙门单电机控制
	bAxis_BackGate_Left_JogP			AT%MX1.4				:BOOL;			//后门_左电机_JOG正
	bAxis_BackGate_Left_JogN			AT%MX1.5				:BOOL;			//后门_左电机_JOG负
	bAxis_BackGate_Right_JogP			AT%MX3.2				:BOOL;			//后门_右电机_JOG正
	bAxis_BackGate_Right_JogN			AT%MX3.3				:BOOL;			//后门_右电机_JOG负	

(*===================================== 单电机控制标志位 End ========================================*)




	
(*===================================== 合成运动制标志位 Start ======================================*)		
	
	//左臂合成运动
	bLeftArm_Backward					AT%MX3.4				:BOOL;			//左臂_向后
	bLeftArm_Forward					AT%MX3.5				:BOOL;			//左臂_向前
	bLeftArm_Left						AT%MX3.6				:BOOL;			//左臂_向左
	bLeftArm_Right						AT%MX3.7				:BOOL;			//左臂_向右

	//右臂合成运动
	bRightArm_Backward					AT%MX4.0				:BOOL;			//左臂_向后
	bRightArm_Forward					AT%MX4.1				:BOOL;			//左臂_向前
	bRightArm_Left						AT%MX4.2				:BOOL;			//左臂_向左
	bRightArm_Right						AT%MX4.3				:BOOL;			//左臂_向右
	
	//小龙门合成运动jog
	bSmallGate_Up						AT%MX4.4				:BOOL;			//小门_升_jog
	bSmallGate_Down						AT%MX4.5				:BOOL;			//小门_降_jog
	
	//大龙门合成运动jog
	bBigGate_Up							AT%MX4.6				:BOOL;			//大门_升_jog
	bBigGate_Down						AT%MX4.7				:BOOL;			//大门_降_jog
	
	//后龙门合成运动jog
	bBackGate_Up						AT%MX5.0				:BOOL;			//后门_升_jog
	bBackGate_Down						AT%MX5.1				:BOOL;			//后门_降_jog
	
	//小龙门合成运动Abs
	bSmallGate_MoveAbs											:BOOL;			//小门_MoveAbs
	                                    	                                         
	//大龙门合成运动Abs                           	                                         
	bBigGate_MoveAbs											:BOOL;			//大门_MoveAbs
	                                    	                                         
	//后龙门合成运动Abs                           	                                         
	bBackGate_MoveAbs											:BOOL;			//后门_MoveAbs
	
(*===================================== 合成运动制标志位 End ========================================*)		






(*===================================== IO Input  ===================================================*)	
	bTeachBoxRemote						AT%IX0.0				:BOOL;			//示教盒旋钮Remote档
	bTeachBoxAuto						AT%IX0.1				:BOOL;			//示教盒旋钮Auto档
    bEmergencyStopBtn					AT%IX0.2				:BOOL;			//急停按钮
    bGreenBtn							AT%IX0.3				:BOOL;			//绿色按钮
    bYellowBtn							AT%IX0.4				:BOOL;			//黄色按钮
    bRedBtn								AT%IX0.5				:BOOL;			//红色按钮
    bRemoteCtrl_Online					AT%IX0.6				:BOOL;			//遥控器Online成功
	bRemoteCtrl_Up						AT%IX0.7				:BOOL;			//遥控器“上”按钮
	bRemoteCtrl_Down					AT%IX1.0				:BOOL;			//遥控器“下”按钮
	bRemoteCtrl_East					AT%IX1.1				:BOOL;			//遥控器“东”按钮
    bRemoteCtrl_West					AT%IX1.2				:BOOL;			//遥控器“西”按钮
    bRemoteCtrl_South					AT%IX1.3				:BOOL;			//遥控器“南”按钮
    bRemoteCtrl_North					AT%IX1.4				:BOOL;			//遥控器“北”按钮
    bRemoteCtrl_1btn					AT%IX1.5				:BOOL;			//遥控器“1”按钮
    bRemoteCtrl_2btn					AT%IX1.6				:BOOL;			//遥控器“2”按钮
	b_BackBeltCtrlBoxWarning			AT%IX1.7				:BOOL;			//长皮带变频器报警
	bLeftArm_Sucker1_Completed			AT%IX2.0				:BOOL;			//左吸盘组传感器1压力到达
	bLeftArm_Sucker2_Completed			AT%IX2.1				:BOOL;			//左吸盘组传感器2压力到达
    bLeftArm_Sucker3_Completed			AT%IX2.2				:BOOL;			//左吸盘组传感器3压力到达
    bLeftArm_Sucker4_Completed			AT%IX2.3				:BOOL;			//左吸盘组传感器4压力到达
    bLeftArm_Sucker5_Completed			AT%IX2.4				:BOOL;			//左吸盘组传感器5压力到达
    bLeftArm_Sucker6_Completed			AT%IX2.5				:BOOL;			//左吸盘组传感器6压力到达
    bLeftArm_Sucker7_Completed			AT%IX2.6				:BOOL;			//左吸盘组传感器7压力到达
	bLeftArm_Sucker8_Completed			AT%IX2.7				:BOOL;			//左吸盘组传感器8压力到达
	bRightArm_Sucker1_Completed			AT%IX3.0				:BOOL;			//右吸盘组传感器1压力到达
	bRightArm_Sucker2_Completed			AT%IX3.1				:BOOL;			//右吸盘组传感器2压力到达
	bRightArm_Sucker3_Completed			AT%IX3.2				:BOOL;			//右吸盘组传感器3压力到达
	bRightArm_Sucker4_Completed			AT%IX3.3				:BOOL;			//右吸盘组传感器4压力到达
	bRightArm_Sucker5_Completed			AT%IX3.4				:BOOL;			//右吸盘组传感器5压力到达
	bRightArm_Sucker6_Completed			AT%IX3.5				:BOOL;			//右吸盘组传感器6压力到达
	bRightArm_Sucker7_Completed			AT%IX3.6				:BOOL;			//右吸盘组传感器7压力到达
	bRightArm_Sucker8_Completed			AT%IX3.7				:BOOL;			//右吸盘组传感器8压力到达
	bCrash_Sensor_Front					AT%IX4.0				:BOOL;			//前防撞条动作
	bCrash_Sensor_Back					AT%IX4.1				:BOOL;			//后防撞条动作	
	bPumpPhaseSequenceProtectionOK		AT%IX5.0				:bool;			//气泵相序保护器OK标志位
(*===================================== IO Input ====================================================*)	





(*===================================== 电磁阀控制标志位 Start ======================================*)	
	
	//左臂电磁阀
	bLeftArm_SV1						AT%QX2.0				:BOOL;			//左臂_电磁阀1
	bLeftArm_SV2						AT%QX2.1				:BOOL;			//左臂_电磁阀2	
	bLeftArm_SV3						AT%QX2.2				:BOOL;			//左臂_电磁阀3
	bLeftArm_SV4						AT%QX2.3				:BOOL;			//左臂_电磁阀4
	bLeftArm_SV5						AT%QX2.4				:BOOL;			//左臂_电磁阀5
	bLeftArm_SV6						AT%QX2.5				:BOOL;			//左臂_电磁阀6
	bLeftArm_SV7						AT%QX2.6				:BOOL;			//左臂_电磁阀7	
	bLeftArm_SV8						AT%QX2.7				:BOOL;			//左臂_电磁阀8
	
	//左臂电磁阀
	bRightArm_SV1						AT%QX3.0				:BOOL;			//右臂_电磁阀1
	bRightArm_SV2						AT%QX3.1				:BOOL;			//右臂_电磁阀2	
	bRightArm_SV3						AT%QX3.2				:BOOL;			//右臂_电磁阀3
	bRightArm_SV4						AT%QX3.3				:BOOL;			//右臂_电磁阀4
	bRightArm_SV5						AT%QX3.4				:BOOL;			//右臂_电磁阀5
	bRightArm_SV6						AT%QX3.5				:BOOL;			//右臂_电磁阀6
	bRightArm_SV7						AT%QX3.6				:BOOL;			//右臂_电磁阀7	
	bRightArm_SV8						AT%QX3.7				:BOOL;			//右臂_电磁阀8
	
	aLeftArm_SV_Array					:ARRAY[1..8] OF BOOL:=[bLeftArm_SV1,
                                                               bLeftArm_SV2,
                                                               bLeftArm_SV3,
                                                               bLeftArm_SV4,
                                                               bLeftArm_SV5,
                                                               bLeftArm_SV6,
                                                               bLeftArm_SV7,
                                                               bLeftArm_SV8	
																];
																
	aRightArm_SV_Array					:ARRAY[1..8] OF BOOL:=[bRightArm_SV1,
                                                               bRightArm_SV2,
                                                               bRightArm_SV3,
                                                               bRightArm_SV4,
                                                               bRightArm_SV5,
                                                               bRightArm_SV6,
                                                               bRightArm_SV7,
                                                               bRightArm_SV8	
																];

	//左臂电磁阀_示教盒标志位
	bLeftArm_SV1_TBox						AT%MX7.0				:BOOL;			//左臂_电磁阀1_示教盒标志位
	bLeftArm_SV2_TBox						AT%MX7.1				:BOOL;			//左臂_电磁阀2_示教盒标志位	
	bLeftArm_SV3_TBox						AT%MX7.2				:BOOL;			//左臂_电磁阀3_示教盒标志位
	bLeftArm_SV4_TBox						AT%MX7.3				:BOOL;			//左臂_电磁阀4_示教盒标志位
	bLeftArm_SV5_TBox						AT%MX7.4				:BOOL;			//左臂_电磁阀5_示教盒标志位
	bLeftArm_SV6_TBox						AT%MX7.5				:BOOL;			//左臂_电磁阀6_示教盒标志位
	bLeftArm_SV7_TBox						AT%MX7.6				:BOOL;			//左臂_电磁阀7_示教盒标志位	
	bLeftArm_SV8_TBox						AT%MX7.7				:BOOL;			//左臂_电磁阀8_示教盒标志位
	
	//右臂电磁阀_示教盒标志位
	bRightArm_SV1_TBox						AT%MX8.0				:BOOL;			//右臂_电磁阀1_示教盒标志位
	bRightArm_SV2_TBox						AT%MX8.1				:BOOL;			//右臂_电磁阀2_示教盒标志位
	bRightArm_SV3_TBox						AT%MX8.2				:BOOL;			//右臂_电磁阀3_示教盒标志位
	bRightArm_SV4_TBox						AT%MX8.3				:BOOL;			//右臂_电磁阀4_示教盒标志位
	bRightArm_SV5_TBox						AT%MX8.4				:BOOL;			//右臂_电磁阀5_示教盒标志位
	bRightArm_SV6_TBox						AT%MX8.5				:BOOL;			//右臂_电磁阀6_示教盒标志位
	bRightArm_SV7_TBox						AT%MX8.6				:BOOL;			//右臂_电磁阀7_示教盒标志位
	bRightArm_SV8_TBox						AT%MX8.7				:BOOL;			//右臂_电磁阀8_示教盒标志位

	
	//左臂电磁阀_示教盒上位机
	bLeftArm_SV1_UpperUI											:BOOL;			//左臂_电磁阀1_上位机标志位
	bLeftArm_SV2_UpperUI											:BOOL;			//左臂_电磁阀2_上位机标志位	
	bLeftArm_SV3_UpperUI											:BOOL;			//左臂_电磁阀3_上位机标志位
	bLeftArm_SV4_UpperUI											:BOOL;			//左臂_电磁阀4_上位机标志位
	bLeftArm_SV5_UpperUI											:BOOL;			//左臂_电磁阀5_上位机标志位
	bLeftArm_SV6_UpperUI											:BOOL;			//左臂_电磁阀6_上位机标志位
	bLeftArm_SV7_UpperUI											:BOOL;			//左臂_电磁阀7_上位机标志位	
	bLeftArm_SV8_UpperUI											:BOOL;			//左臂_电磁阀8_上位机标志位
	                                            	                                            
	//左臂电磁阀_示教盒上位机                              	                                            
	bRightArm_SV1_UpperUI											:BOOL;			//右臂_电磁阀1_上位机标志位
	bRightArm_SV2_UpperUI											:BOOL;			//右臂_电磁阀2_上位机标志位
	bRightArm_SV3_UpperUI											:BOOL;			//右臂_电磁阀3_上位机标志位
	bRightArm_SV4_UpperUI											:BOOL;			//右臂_电磁阀4_上位机标志位
	bRightArm_SV5_UpperUI											:BOOL;			//右臂_电磁阀5_上位机标志位
	bRightArm_SV6_UpperUI											:BOOL;			//右臂_电磁阀6_上位机标志位
	bRightArm_SV7_UpperUI											:BOOL;			//右臂_电磁阀7_上位机标志位
	bRightArm_SV8_UpperUI											:BOOL;			//右臂_电磁阀8_上位机标志位


	
(*===================================== 电磁阀控制标志位 End ========================================*)	







(*===================================== 灯光 Start ========================================*)
	
	bTriColorLed_Green_Enable					AT%QX0.0				:BOOL;			//三色灯-绿色-点亮
	bTriColorLed_Yellow_Enable					AT%QX0.1				:BOOL;			//三色灯-黄色-点亮
	bTriColorLed_Red_Enable						AT%QX0.2				:BOOL;			//三色灯-红色-点亮
	bBtnLed_Green_Enable						AT%QX0.3				:BOOL;			//按钮灯-绿色-点亮
	bBtnLed_Yellow_Enable						AT%QX0.4				:BOOL;			//按钮灯-黄色-点亮
	bBtnLed_Red_Enable							AT%QX0.5				:BOOL;			//按钮灯-红色-点亮
	bFrontLight_Left_Enable						AT%QX0.6				:BOOL;			//前部照明灯-左-点亮
	bFrontLight_Right_Enable					AT%QX0.7				:BOOL;			//前部照明灯-右-点亮	
	
(*===================================== 灯光 End ==========================================*)	





(*===================================== 真空泵 Start ========================================*)
	
	bPumpMotor_Enable					AT%QX1.0				:BOOL;			//真空泵电机上电
	bPumpMotor_Enable_TBox				AT%MX9.4				:BOOL;			//真空泵电机上电_示教盒标志位
	bPumpMotor_Enable_UpperUI									:BOOL;			//真空泵电机上电_上位机标志位
	
(*===================================== 真空泵 End ==========================================*)





(*===================================== 滚筒控制标志位 Start ========================================*)
	
	bAxis_GunTong_Back					AT%QX1.1				:BOOL;			//后滚筒_电机
	bAxis_GunTong_Left					AT%QX1.2				:BOOL;			//左滚筒_电机
	bAxis_GunTong_Right					AT%QX1.3				:BOOL;			//右滚筒_电机
	bAxis_GunTong_Middle				AT%QX1.4				:BOOL;			//中滚筒_电机

(*===================================== 滚筒控制标志位 End ==========================================*)





(*===================================== 示教盒相关 Start ============================================*)	
	
//	bTeachBox_Stop						AT%MX5.2				:BOOL;			//示教盒STOP键
//	bTeachBox_Run						AT%MX5.3				:BOOL;			//示教盒Run键
//	bTeachBox_Hand00					AT%MX5.4				:BOOL;			//示教盒HAND00键
//	bTeachBox_Hand01					AT%MX5.5				:BOOL;			//示教盒HAND01键
//	bTeachBox_Led1						AT%MX6.0				:BOOL;			//示教盒LED1点亮
//	bTeachBox_Led2						AT%MX6.1				:BOOL;			//示教盒LED2点亮
//	bTeachBox_Buzzer_continuous			AT%MX6.2				:BOOL;			//示教盒蜂鸣器长蜂鸣	
//	bTeachBox_Buzzer_Short				AT%MX6.2				:BOOL;			//示教盒蜂鸣器短蜂鸣

(*===================================== 示教盒相关 End ==============================================*)	






(*===================================== 运行速度设置区 Start ========================================*)	
	
//	//手动模式速度及加速度设置
//	fManualCtrl_Velo					AT%MD20					:REAL;			//手动控制_运行速度
//	fManualCtrl_Acc						AT%MD24					:REAL;			//手动控制_运行速度
	
//	//自动模式速度及加速度设置
//	fAutoCtrl_Velo						AT%MD28					:REAL;			//自动控制_运行速度
//	fAutoCtrl_Acc						AT%MD32					:REAL;			//自动控制_运行速度			

(*===================================== 运行速度设置区 End ==========================================*)	




(*====================================== 状态显示字段 Start =========================================*)	
	
//	//左臂电机状态
//	fAxis_LeftArm_Wrist_ActPos			AT%MD100				:REAL;			//左臂_腕电机_实时位置
//	fAxis_LeftArm_Wrist_ActVelo			AT%MD104				:REAL;			//左臂_腕电机_实时速度
//	fAxis_LeftArm_Wrist_ActTorq			AT%MD108				:REAL;			//左臂_腕电机_实时力矩	
//	fAxis_LeftArm_Left_ActPos			AT%MD112				:REAL;			//左臂_左电机_实时位置
//	fAxis_LeftArm_Left_ActVelo			AT%MD116				:REAL;			//左臂_左电机_实时速度
//	fAxis_LeftArm_Left_ActTorq			AT%MD120				:REAL;			//左臂_左电机_实时力矩		
//	fAxis_LeftArm_Right_ActPos			AT%MD124				:REAL;			//左臂_右电机_实时位置
//	fAxis_LeftArm_Right_ActVelo			AT%MD128				:REAL;			//左臂_右电机_实时速度
//	fAxis_LeftArm_Right_ActTorq			AT%MD132				:REAL;			//左臂_右电机_实时力矩
//	fAxis_LeftArm_Lift_ActPos			AT%MD136				:REAL;			//左臂_升电机_实时位置
//	fAxis_LeftArm_Lift_ActVelo			AT%MD140				:REAL;			//左臂_升电机_实时速度
//	fAxis_LeftArm_Lift_ActTorq			AT%MD144				:REAL;			//左臂_升电机_实时力矩

//	//右臂电机状态
//	fAxis_RightArm_Wrist_ActPos			AT%MD184				:REAL;			//右臂_腕电机_实时位置
//	fAxis_RightArm_Wrist_ActVelo		AT%MD188				:REAL;			//右臂_腕电机_实时速度
//	fAxis_RightArm_Wrist_ActTorq		AT%MD192				:REAL;			//右臂_腕电机_实时力矩	
//	fAxis_RightArm_Left_ActPos			AT%MD196				:REAL;			//右臂_左电机_实时位置
//	fAxis_RightArm_Left_ActVelo			AT%MD200				:REAL;			//右臂_左电机_实时速度
//	fAxis_RightArm_Left_ActTorq			AT%MD204				:REAL;			//右臂_左电机_实时力矩		
//	fAxis_RightArm_Right_ActPos			AT%MD208				:REAL;			//右臂_右电机_实时位置
//	fAxis_RightArm_Right_ActVelo		AT%MD212				:REAL;			//右臂_右电机_实时速度
//	fAxis_RightArm_Right_ActTorq		AT%MD216				:REAL;			//右臂_右电机_实时力矩
//	fAxis_RightArm_Lift_ActPos			AT%MD220				:REAL;			//右臂_升电机_实时位置
//	fAxis_RightArm_Lift_ActVelo			AT%MD224				:REAL;			//右臂_升电机_实时速度
//	fAxis_RightArm_Lift_ActTorq			AT%MD228				:REAL;			//右臂_升电机_实时力矩				
	
//	//小龙门电机状态
//	fAxis_SmallGate_Left_ActPos			AT%MD148				:REAL;			//小龙门_左电机_实时位置
//	fAxis_SmallGate_Left_ActVelo		AT%MD152				:REAL;			//小龙门_左电机_实时速度
//	fAxis_SmallGate_Left_ActTorq		AT%MD156				:REAL;			//小龙门_左电机_实时力矩
//	fAxis_SmallGate_Right_ActPos		AT%MD232				:REAL;			//小龙门_右电机_实时位置
//	fAxis_SmallGate_Right_ActVelo		AT%MD236				:REAL;			//小龙门_右电机_实时速度
//	fAxis_SmallGate_Right_ActTorq		AT%MD240				:REAL;			//小龙门_右电机_实时力矩

//	//大龙门电机状态
//	fAxis_BigGate_Left_ActPos			AT%MD160				:REAL;			//大龙门_左电机_实时位置
//	fAxis_BigGate_Left_ActVelo			AT%MD164				:REAL;			//大龙门_左电机_实时速度
//	fAxis_BigGate_Left_ActTorq			AT%MD168				:REAL;			//大龙门_左电机_实时力矩
//	fAxis_BigGate_Right_ActPos			AT%MD244				:REAL;			//大龙门_右电机_实时位置
//	fAxis_BigGate_Right_ActVelo			AT%MD248				:REAL;			//大龙门_右电机_实时速度
//	fAxis_BigGate_Right_ActTorq			AT%MD252				:REAL;			//大龙门_右电机_实时力矩

//	//后龙门电机状态
//	fAxis_BackGate_Left_ActPos			AT%MD172				:REAL;			//后龙门_左电机_实时位置
//	fAxis_BackGate_Left_ActVelo			AT%MD176				:REAL;			//后龙门_左电机_实时速度
//	fAxis_BackGate_Left_ActTorq			AT%MD180				:REAL;			//后龙门_左电机_实时力矩
//	fAxis_BackGate_Right_ActPos			AT%MD256				:REAL;			//后龙门_右电机_实时位置
//	fAxis_BackGate_Right_ActVelo		AT%MD260				:REAL;			//后龙门_右电机_实时速度
//	fAxis_BackGate_Right_ActTorq		AT%MD264				:REAL;			//后龙门_右电机_实时力矩
	
	
	

(*====================================== 状态显示字段  End ==========================================*)	





END_VAR




















]]></Declaration>
  </GVL>
</TcPlcObject>